version: 2.1

orbs: 
  docker: circleci/docker@2.0.1
  ggshield: gitguardian/ggshield@1.1.0
  sonarcloud: sonarsource/sonarcloud@1.0.1

jobs:

  test:
    
    docker:
      - image: thinxcloud/console-build-env:latest
    
    steps:
      
      - checkout
      
      - run:
          name: Install dependencies and build
          command: |
            cd src
            npm install
            npm install
            npm run build

      - run:
          name: Test the project
          command: |
            cd src
            npm run cy

      - store_test_results:
          name: Collect test results
          path: ./src/coverage

      - store_artifacts:
          name: Collect screenshots
          path: ./src/cypress/screenshots
          destination: cypress-screenshots
      
      - store_artifacts:
          name: Collect videos
          path: ./src/cypress/videos
          destination: cypress-videos

      - sonarcloud/scan

  deploy:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          registry: registry.thinx.cloud:5000
      - docker/build:
          registry: registry.thinx.cloud:5000
          docker-context: src
          image: thinx/console
          dockerfile: src/Dockerfile
          extra_build_args: |
            --build-arg ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN} \
            --build-arg LANDING_HOSTNAME=${LANDING_HOSTNAME} \
            --build-arg API_HOSTNAME=${API_HOSTNAME} \
            --build-arg API_BASEURL=${API_BASEURL} \
            --build-arg WEB_HOSTNAME=${WEB_HOSTNAME} \
            --build-arg GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID} \
            --build-arg CRISP_WEBSITE_ID=${CRISP_WEBSITE_ID} \
            --build-arg ENTERPRISE=false \
            --build-arg ENVIRONMENT=${ENVIRONMENT} \
          tag: 'swarm'
      - docker/push:
          digest-path: /tmp/digest.txt
          image: thinx/console
          registry: registry.thinx.cloud:5000
          tag: 'swarm'

workflows:

  main:

    jobs:

      - test:
          context: sonarcloud

      - ggshield/scan:
          name: Scan using Gitguardian shield
          base_revision: <<pipeline.git.base_revision>>
          revision: <<pipeline.git.revision>>
          context:
            - gitguardian
          filters:
            branches:
              only:
                - main

      #Â TODO: make sure thinx-docker-repo and sonarcloud exist; thinx-docker-repo should be called console-config-production and console-config-public
      - deploy:
          context:
            - dockerhub
            - thinx-docker-repo
            - sonarcloud
          filters:
            branches:
              only:
                - thinx-swarm